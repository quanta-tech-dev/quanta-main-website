generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Blog {
  id         String     @id @default(cuid())
  title      String
  content    Json
  slug       String     @unique
  excerpt    String?
  coverImage String?
  featured   Boolean    @default(false)
  published  Boolean    @default(false)
  author     String     @default("Admin")
  tags       String[]
  views      Int        @default(0)
  likes      Int        @default(0)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  blogLikes  BlogLike[]
  blogViews  BlogView[]

  @@map("blogs")
}

model BlogView {
  id        String   @id @default(cuid())
  blogId    String
  ipAddress String
  userAgent String?
  createdAt DateTime @default(now())
  blog      Blog     @relation(fields: [blogId], references: [id], onDelete: Cascade)

  @@unique([blogId, ipAddress])
  @@map("blog_views")
}

model BlogLike {
  id        String   @id @default(cuid())
  blogId    String
  ipAddress String
  userAgent String?
  createdAt DateTime @default(now())
  blog      Blog     @relation(fields: [blogId], references: [id], onDelete: Cascade)

  @@map("blog_likes")
}

model HeroSlide {
  id          String   @id @default(cuid())
  title       String
  description String
  image       String
  buttonText  String
  buttonLink  String
  subtext     String?
  order       Int      @default(1)
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("hero_slides")
}

model ContactMessage {
  id          String   @id @default(cuid())
  name        String
  email       String
  phone       String
  companyName String
  websiteURL  String?
  subject     String?
  message     String
  status      String   @default("new")
  ipAddress   String?
  userAgent   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("contact_messages")
}
